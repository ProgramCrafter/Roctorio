#:set UNIT 60
# UNIT = 40: 1920x1080 -> 48x27
# UNIT = 60: 1920x1080 -> 32x18

#:import Factory kivy.factory.Factory
#:import SIN math.sin
#:import COS math.cos
#:import pi math.pi

#:set d60 -pi / 3

#:set SIZE  128
#:set OFFSET_X  SIZE * 1 / 4 * (3 ** 0.5)
#:set OFFSET_Y  SIZE * 3 / 4

<ColouredWidget@Widget>:
  backcolor:            0.1, 0.1, 0.1, 1
  forecolor:            1.0, 1.0, 1.0, 1
  
  color:                self.forecolor
  
  canvas.before:
    Color:
      rgba:             self.backcolor
    Rectangle:
      pos:              self.pos
      size:             self.size

<ColouredLabel@ColouredWidget+Label>:
  font_size:            16

<ColouredButton@Button>:
  backcolor:            0.1, 0.1, 0.1, 1
  forecolor:            1.0, 1.0, 1.0, 1
  
  color:                self.forecolor
  
  background_color:     self.backcolor
  background_normal:    ''

<ColouredFloatLayout@ColouredWidget+FloatLayout>:
<ColouredGridLayout@ColouredWidget+GridLayout>:

### position utils ###
<HexPositionable@Widget>:
  px:                   0
  py:                   0
  dx:                   0
  dy:                   0
  
  pos:                  (self.px * 2 + self.py) * OFFSET_X + self.dx, (self.py) * OFFSET_Y + self.dy

<MechanismDeltaCalc@HexPositionable>:
  side:                 0
  dx:                   (OFFSET_X + SIZE / 2 if self.side in [0, 1] else (OFFSET_X / 2 + SIZE / 4 if self.side in [2, 5] else 0)) - self.width / 2
  dy:                   (OFFSET_Y if self.side in [0, 4] else (SIZE / 4 if self.side in [1, 3] else (SIZE if self.side == 5 else 0))) - self.height / 2

### position utils end ###

### drawing utils ###
<HexagonDrawer@Widget>:
  tx_source:            'assets\\tiles\\desert-256-b.png'
  
  size_hint:            None, None
  size:                 SIZE, SIZE
  
  canvas.after:
    Color:
      rgba:             1.0, 1.0, 1.0, 1
    
    Ellipse:
      segments:         6
      pos:              self.pos
      size:             self.size
      source:           self.tx_source

<EntityDrawer@Widget>:
  tx_source:            'assets\\entities\\entity-256.png'
  
  size_hint:            None, None
  size:                 SIZE, SIZE
  
  canvas.after:
    Color:
      rgba:             1.0, 1.0, 1.0, 1
    
    Ellipse:
      segments:         6
      pos:              self.pos
      size:             self.size
      source:           self.tx_source

<EntHP@HexPositionable>:
  size_hint:            None, None
  size:                 80, 15
  
  dx:                   SIZE / 2 - self.width / 2
  
  canvas.after:
    Color:
      rgba:             0.0, 1.0, 0.0, 1
    
    Rectangle:
      pos:              self.pos
      size:             self.size

<Resource@Widget>:
  size_hint:            None, None
  size:                 28, 28
  
  q:                    0
  opacity:              bool(self.q) + 0
  tx_source:            'assets\\resources\\water-256.png'
  
  canvas.before:
    Color:
      rgba:             1.0, 1.0, 1.0, 1
    
    Rectangle:
      pos:              self.pos
      size:             self.size
      source:           self.tx_source
  
  Label:
    text:               ('[b]%d[/b]' % root.q) if root.opacity else ''
    color:              0.0, 0.0, 0.0, 1
    markup:             True
    
    pos:                root.right - self.width + 4, root.y - 4
    text_size:          root.size
    size:               root.size
    halign:             'right'
    valign:             'bottom'

<Inventory@ColouredGridLayout>:
  rows:                 1
  backcolor:            1.0, 1.0, 1.0, 0.6
  host:                 None
  
  size_hint:            None, None
  size:                 self.minimum_width, self.minimum_height
  pos:                  self.host.host_pos if self.host else (0, 0)
  
  padding:              4, 4
  spacing:              4, 4
  
### drawing utils end ###

<Hex@HexPositionable+HexagonDrawer>:
<Entity@HexPositionable+EntityDrawer>:

<Decoration@HexPositionable>:
  tx_source:            'assets\\decorations\\copper-pipe-16-76.png'
  
  side:                 0
  
  dec_offset:           6
  
  size_hint:            None, None
  width:                16
  height:               SIZE / 2 + self.dec_offset * 2
  
  host_x:               self.x + OFFSET_X + 8 + COS(d60 * self.side) * (OFFSET_X - 8) + 10
  host_y:               self.y + SIZE / 2 + SIN(d60 * self.side) * (SIZE / 2 - self.dec_offset) - 20
  host_pos:             self.host_x, self.host_y
  
  canvas.after:
    Color:
      rgba:             1.0, 1.0, 1.0, 1
    
    PushMatrix
    Rotate:
      angle:            360 - 60 * self.side
      origin:           self.x + OFFSET_X + 8, self.y + SIZE / 2
    
    Rectangle:
      pos:              self.x + OFFSET_X * 2, self.y + SIZE / 4 - self.dec_offset
      size:             self.size
      source:           self.tx_source
    
    PopMatrix

<Mechanism@MechanismDeltaCalc>:
  tx_source:            'assets\\mechanisms\\pump-256.png'
  
  size_hint:            None, None
  size:                 SIZE / 3, SIZE / 3
  
  host_pos:             self.right - 12, self.top - 12
  
  canvas.after:
    Color:
      rgba:             1, 1, 1, 1
    
    Rectangle:
      pos:              self.pos
      size:             self.size
      source:           self.tx_source

<InfiniteHexGrid@FloatLayout>:

<GameInterface@ColouredFloatLayout>:
  backcolor:            1.0, 1.0, 1.0, 1
    
  InfiniteHexGrid:
    id:                 playground
  
  GridLayout:
    cols:               1
    size_hint:          1 / 10, 1 / 8
    pos_hint:           {'top': 1}
    
    ColouredLabel:
      id:               tps_meter
      
      backcolor:        0.8, 0.8, 0.8, 1
      forecolor:        0.0, 0.0, 0.0, 1
      
      text_size:        self.width, None
      valign:           'center'
      halign:           'left'
      padding:          20, 5
    
    ColouredButton:
      backcolor:        0.7, 0.7, 0.7, 1
      forecolor:        0.0, 0.0, 0.0, 1
      
      text_size:        self.width, None
      valign:           'center'
      halign:           'center'
      text:             'Скрафтить'
      
      on_press:
        Factory.CraftingView().open()

<CraftingRecipe@ColouredGridLayout>:
  rows:                 1
  
  padding:              16, 16
  spacing:              16, 0
  
  backcolor:            0.6, 0.6, 0.6, 1
  
  size_hint:            1, None
  height:               32 + 28
  
  canvas.before:
    Color:
      rgba:             self.backcolor
    Rectangle:
      pos:              self.pos
      size:             self.size

<BlockingView@ModalView>:
  auto_dismiss:         True
  
  on_open:
    app.game_thread.pause_game()
  
  on_dismiss:
    app.game_thread.continue_game()

<CraftingView@BlockingView>:
  size_hint:            0.6, 0.6
  
  background:           ''
  background_color:     0.9, 0.9, 0.9, 1
  
  ScrollView:
    size_hint:          1, 1
    
    GridLayout:
      cols:             1
      
      spacing:          0, 8
      padding:          16, 16
      size_hint:        1, None
      height:           self.minimum_height
      
      id:               recipes
      
      on_kv_post:       app.put_recipes(self)
